My_Profile As screen:

    "gal_my_skills As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
        AccessibleLabel: ="Gallery list of applications and user's skills for editing"
        BorderColor: =RGBA(179, 179, 179, 1)
        BorderThickness: =1
        Height: =550
        Items: |-
            =If(
                dd_app_filter.Selected.Value = "<show all>",
                Sort(
                    col_profile,
                    Application,
                    Ascending
                ),
                Sort(
                    Filter(
                        col_profile,
                        Category.Value = dd_app_filter.Selected.Value
                    ),
                    Application,
                    Ascending
                )
            )
        Layout: =Layout.Vertical
        TabIndex: =0
        TemplatePadding: =0
        TemplateSize: =50
        Width: =1225
        X: =70
        Y: =176
        ZIndex: =1

        lbl_application_title As label:
            FontWeight: =Normal
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =14
            Text: =ThisItem.Application
            VerticalAlign: =VerticalAlign.Top
            Width: =300
            X: =10
            Y: =20
            ZIndex: =1

        Separator2 As rectangle:
            Fill: =RGBA(179, 179, 179, 1)
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =2

        dd_user_level As dropdown:
            AccessibleLabel: ="Edit user's current level"
            BorderThickness: =0
            ChevronBackground: =RGBA(0, 134, 208, 1)
            Default: =ThisItem.UserLevel
            Fill: =If(dd_user_level.Selected.Title = "None",RGBA(237, 237, 237, 1),SkyBlue)
            Height: =30
            Items: =col_levels.Title
            OnChange: |-
                =If(
                    IsBlank(ThisItem.ID),
                    Patch(
                        MatrixNetwork,
                        Defaults(MatrixNetwork),
                        {Title: ThisItem.Application,
                        StaffEmail: varUser.Email,
                        UserLevel: dd_user_level.Selected.Title}
                    ),
                    Patch(
                        MatrixNetwork,
                        LookUp(MatrixNetwork, ID = ThisItem.ID),
                        {UserLevel: dd_user_level.Selected.Title}
                    )
                );
                
                
                // Load network levels into a collection.
                ClearCollect(col_network, ShowColumns(Filter(MatrixNetwork,StaffEmail = varUser.Email),"ID","Title","StaffEmail","UserLevel","TargetUserLevel","DeveloperLevel","TargetDeveloperLevel"));
                
                // Load full profile.
                ClearCollect(col_profile,
                        Ungroup(
                            AddColumns(
                                col_applications,
                                "myGroupedColumn",
                                Filter(
                                    col_network,
                                    Title=col_applications[@Application]
                                )
                            ),
                         "myGroupedColumn")
                );
                
                // Populate all blank values in the col_profile with "None"
                UpdateIf(col_profile,IsBlank(UserLevel),{UserLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetUserLevel),{TargetUserLevel: "None"});
                UpdateIf(col_profile,IsBlank(DeveloperLevel),{DeveloperLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetDeveloperLevel),{TargetDeveloperLevel: "None"})
            OnSelect: =Select(Parent)
            SelectionFill: =RGBA(0, 134, 208, 1)
            Width: =200
            X: =337
            Y: =10
            ZIndex: =3

        dd_dev_level As dropdown:
            AccessibleLabel: ="Edit developer's current level"
            BorderThickness: =0
            ChevronBackground: =RGBA(141, 198, 63, 1)
            Default: =ThisItem.DeveloperLevel
            Fill: |-
                =If(
                    dd_dev_level.Selected.Title = "None",
                    RGBA(
                        237,
                        237,
                        237,
                        1
                    ),
                    RGBA(187, 221, 140, 1)
                )
            Height: =30
            Items: =col_levels.Title
            OnChange: |-
                =If(
                    IsBlank(ThisItem.ID),
                    Patch(
                        MatrixNetwork,
                        Defaults(MatrixNetwork),
                        {Title: ThisItem.Application,
                        StaffEmail: varUser.Email,
                        DeveloperLevel: dd_dev_level.Selected.Title}
                    ),
                    Patch(
                        MatrixNetwork,
                        LookUp(MatrixNetwork, ID = ThisItem.ID),
                        {DeveloperLevel: dd_dev_level.Selected.Title}
                    )
                );
                
                // Load network levels into a collection.
                ClearCollect(col_network, ShowColumns(Filter(MatrixNetwork,StaffEmail = varUser.Email),"ID","Title","StaffEmail","UserLevel","TargetUserLevel","DeveloperLevel","TargetDeveloperLevel"));
                
                // Load full profile.
                ClearCollect(col_profile,
                        Ungroup(
                            AddColumns(
                                col_applications,
                                "myGroupedColumn",
                                Filter(
                                    col_network,
                                    Title=col_applications[@Application]
                                )
                            ),
                         "myGroupedColumn")
                );
                
                // Populate all blank values in the col_profile with "None"
                UpdateIf(col_profile,IsBlank(UserLevel),{UserLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetUserLevel),{TargetUserLevel: "None"});
                UpdateIf(col_profile,IsBlank(DeveloperLevel),{DeveloperLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetDeveloperLevel),{TargetDeveloperLevel: "None"})
            OnSelect: =Select(Parent)
            SelectionFill: =RGBA(141, 198, 63, 1)
            Width: =200
            X: =785
            Y: =10
            ZIndex: =4

        lbl_app_category As label:
            Color: =RGBA(128, 128, 128, 1)
            FontWeight: =Normal
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10
            Text: =ThisItem.Category.Value
            VerticalAlign: =VerticalAlign.Bottom
            Width: =300
            X: =10
            Y: =2
            ZIndex: =5

        dd_target_user_level As dropdown:
            AccessibleLabel: ="Edit user's target level"
            BorderThickness: =0
            ChevronBackground: =RGBA(0, 94, 146, 1)
            Default: =ThisItem.TargetUserLevel
            Fill: =If(dd_target_user_level.Selected.Title = "None",RGBA(237, 237, 237, 1),SkyBlue)
            Height: =30
            Items: =col_levels.Title
            OnChange: |-
                =If(
                    IsBlank(ThisItem.ID),
                    Patch(
                        MatrixNetwork,
                        Defaults(MatrixNetwork),
                        {Title: ThisItem.Application,
                        StaffEmail: varUser.Email,
                        TargetUserLevel: dd_target_user_level.Selected.Title}
                    ),
                    Patch(
                        MatrixNetwork,
                        LookUp(MatrixNetwork, ID = ThisItem.ID),
                        {TargetUserLevel: dd_target_user_level.Selected.Title}
                    )
                );
                
                
                // Load network levels into a collection.
                ClearCollect(col_network, ShowColumns(Filter(MatrixNetwork,StaffEmail = varUser.Email),"ID","Title","StaffEmail","UserLevel","TargetUserLevel","DeveloperLevel","TargetDeveloperLevel"));
                
                // Load full profile.
                ClearCollect(col_profile,
                        Ungroup(
                            AddColumns(
                                col_applications,
                                "myGroupedColumn",
                                Filter(
                                    col_network,
                                    Title=col_applications[@Application]
                                )
                            ),
                         "myGroupedColumn")
                );
                
                // Populate all blank values in the col_profile with "None"
                UpdateIf(col_profile,IsBlank(UserLevel),{UserLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetUserLevel),{TargetUserLevel: "None"});
                UpdateIf(col_profile,IsBlank(DeveloperLevel),{DeveloperLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetDeveloperLevel),{TargetDeveloperLevel: "None"})
            OnSelect: =Select(Parent)
            SelectionFill: =RGBA(0, 134, 208, 1)
            Width: =200
            X: =547
            Y: =10
            ZIndex: =6

        dd_target_dev_level As dropdown:
            AccessibleLabel: ="Edit developer's target level"
            BorderThickness: =0
            ChevronBackground: =RGBA(99, 139, 44, 1)
            Default: =ThisItem.TargetDeveloperLevel
            Fill: |-
                =If(
                    dd_target_dev_level.Selected.Title = "None",
                    RGBA(
                        237,
                        237,
                        237,
                        1
                    ),
                    RGBA(187, 221, 140, 1)
                )
            Height: =30
            Items: =col_levels.Title
            OnChange: |-
                =If(
                    IsBlank(ThisItem.ID),
                    Patch(
                        MatrixNetwork,
                        Defaults(MatrixNetwork),
                        {Title: ThisItem.Application,
                        StaffEmail: varUser.Email,
                        TargetDeveloperLevel: dd_target_dev_level.Selected.Title}
                    ),
                    Patch(
                        MatrixNetwork,
                        LookUp(MatrixNetwork, ID = ThisItem.ID),
                        {TargetDeveloperLevel: dd_target_dev_level.Selected.Title}
                    )
                );
                
                // Load network levels into a collection.
                ClearCollect(col_network, ShowColumns(Filter(MatrixNetwork,StaffEmail = varUser.Email),"ID","Title","StaffEmail","UserLevel","TargetUserLevel","DeveloperLevel","TargetDeveloperLevel"));
                
                // Load full profile.
                ClearCollect(col_profile,
                        Ungroup(
                            AddColumns(
                                col_applications,
                                "myGroupedColumn",
                                Filter(
                                    col_network,
                                    Title=col_applications[@Application]
                                )
                            ),
                         "myGroupedColumn")
                );
                
                // Populate all blank values in the col_profile with "None"
                UpdateIf(col_profile,IsBlank(UserLevel),{UserLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetUserLevel),{TargetUserLevel: "None"});
                UpdateIf(col_profile,IsBlank(DeveloperLevel),{DeveloperLevel: "None"});
                UpdateIf(col_profile,IsBlank(TargetDeveloperLevel),{TargetDeveloperLevel: "None"})
            OnSelect: =Select(Parent)
            SelectionFill: =RGBA(141, 198, 63, 1)
            Width: =200
            X: =995
            Y: =10
            ZIndex: =7

        lbl_id_hidden As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(128, 128, 128, 1)
            FontWeight: =Normal
            Height: =30
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.ID
            Visible: =false
            Width: =47
            X: =290
            Y: =10
            ZIndex: =8

    ico_back As icon.ChevronLeft:
        AccessibleLabel: ="Navigate back to home screen"
        Color: =RGBA(0, 0, 0, 1)
        Height: =40
        Icon: =Icon.ChevronLeft
        OnSelect: =Back()
        TabIndex: =0
        Width: =40
        X: =15
        Y: =30
        ZIndex: =2

    lbl_screen_name As label:
        FontWeight: =Semibold
        Height: =50
        Size: =24
        Text: ="My Office 365 Profile"
        Width: =350
        X: =70
        Y: =25
        ZIndex: =3

    lbl_screen_description As label:
        Height: =62
        Text: ="For each Office 365 application listed below, rank your Current User Level and Target User Level.  Repeat for 'developer' level skills where you are doing custom coding."
        VerticalAlign: =VerticalAlign.Top
        Width: =699
        X: =70
        Y: =75
        ZIndex: =4

    lbl_legend_levels As label:
        Height: =103
        Size: =11
        Text: |-
            ="None: 
            Interested: 
            Basic:  
            Intermediate:  
            Advanced:  "
        VerticalAlign: =VerticalAlign.Top
        Width: =122
        X: =852
        Y: =33
        ZIndex: =5

    lbl_legend_descriptions As label:
        Height: =103
        Size: =11
        Text: |-
            ="no knowledge or experience
            no experience, but interested in learning
            introductory level of experience
            broad range of experience  
            expert level of experience"
        VerticalAlign: =VerticalAlign.Top
        Width: =325
        X: =974
        Y: =33
        ZIndex: =6

    lbl_gallery_header As label:
        Align: =Left
        BorderColor: =RGBA(128, 128, 128, 1)
        BorderThickness: =2
        Color: =RGBA(255, 255, 255, 1)
        Fill: =RGBA(128, 128, 128, 1)
        FontWeight: =Semibold
        Text: =" Application                                                     Current User Level            Target User Level                     Current Dev Level              Target Dev Level"
        Width: =1225
        X: =70
        Y: =136
        ZIndex: =10

    lbl_legend_level As label:
        Align: =Left
        BorderColor: =RGBA(0, 121, 187, 1)
        FontWeight: =Semibold
        Height: =30
        Italic: =true
        Size: =14
        Text: ="Levels"
        Width: =122
        X: =852
        Y: =8
        ZIndex: =11

    lbl_legend_description As label:
        Align: =Left
        BorderColor: =RGBA(0, 121, 187, 1)
        FontWeight: =Semibold
        Height: =30
        Italic: =true
        Size: =14
        Text: ="Description"
        Width: =122
        X: =974
        Y: =8
        ZIndex: =12

    dd_app_filter As dropdown:
        AccessibleLabel: ="Filter application list by category"
        BorderThickness: =0
        ChevronBackground: =RGBA(179, 179, 179, 1)
        Fill: =RGBA(237, 237, 237, 1)
        Height: =30
        Items: =["<show all>","Core","Collaboration","Power Platform","Other"]
        SelectionFill: =RGBA(179, 179, 179, 1)
        Size: =12
        Width: =188
        X: =192
        Y: =141
        ZIndex: =13

